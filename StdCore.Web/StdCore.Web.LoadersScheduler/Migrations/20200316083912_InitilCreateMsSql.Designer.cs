// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Std.WebClient.Data;

namespace Std.WebClient.Migrations
{
    [DbContext(typeof(SchedulerDbContext))]
    [Migration("20200316083912_InitilCreateMsSql")]
    partial class InitilCreateMsSql
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StdCore.Web.LoadersScheduler.Data.Domain.LoaderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Loaders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Погрузчик 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Погрузчик 2"
                        });
                });

            modelBuilder.Entity("StdCore.Web.LoadersScheduler.Data.Domain.TaskEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleteUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FactEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FactStart")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LoaderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlanStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserId");

                    b.HasIndex("DeleteUserId");

                    b.HasIndex("LoaderId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("StdCore.Web.LoadersScheduler.Data.Domain.TaskTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Плановое"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ФМ"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Перерыв"
                        });
                });

            modelBuilder.Entity("StdCore.Web.LoadersScheduler.Data.Domain.TaskWorkStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Новый"
                        },
                        new
                        {
                            Id = 2,
                            Name = "В работе"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Выполнен"
                        });
                });

            modelBuilder.Entity("StdCore.Web.LoadersScheduler.Data.Domain.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2020, 1, 1, 1, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Admin",
                            Login = "Admin",
                            Name = "Admin",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("StdCore.Web.LoadersScheduler.Data.Domain.UserGroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Администратор"
                        });
                });

            modelBuilder.Entity("StdCore.Web.LoadersScheduler.Data.Domain.TaskEntity", b =>
                {
                    b.HasOne("StdCore.Web.LoadersScheduler.Data.Domain.UserEntity", "CreateUser")
                        .WithMany()
                        .HasForeignKey("CreateUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StdCore.Web.LoadersScheduler.Data.Domain.UserEntity", "DeleteUser")
                        .WithMany()
                        .HasForeignKey("DeleteUserId");

                    b.HasOne("StdCore.Web.LoadersScheduler.Data.Domain.LoaderEntity", "Loader")
                        .WithMany()
                        .HasForeignKey("LoaderId");
                });
#pragma warning restore 612, 618
        }
    }
}
